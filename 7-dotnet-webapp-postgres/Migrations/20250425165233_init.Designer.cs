// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using postgres;

#nullable disable

namespace postgres.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20250425165233_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("postgres.Category", b =>
                {
                    b.Property<int>("Categoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("categoryid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Categoryid"));

                    b.Property<string>("Categoryname")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("categoryname");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.HasKey("Categoryid")
                        .HasName("categories_pkey");

                    b.ToTable("categories", "sales");
                });

            modelBuilder.Entity("postgres.Customer", b =>
                {
                    b.Property<int>("Customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Customerid"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("city");

                    b.Property<string>("Contactname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("contactname");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("country");

                    b.Property<string>("Customername")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("customername");

                    b.Property<string>("Postalcode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("postalcode");

                    b.HasKey("Customerid")
                        .HasName("customers_pkey");

                    b.ToTable("customers", "sales");
                });

            modelBuilder.Entity("postgres.Employee", b =>
                {
                    b.Property<int>("Employeeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("employeeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Employeeid"));

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("birthdate");

                    b.Property<string>("Firstname")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("lastname");

                    b.Property<string>("Notes")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("notes");

                    b.Property<string>("Photo")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("photo");

                    b.HasKey("Employeeid")
                        .HasName("employees_pkey");

                    b.ToTable("employees", "sales");
                });

            modelBuilder.Entity("postgres.Order", b =>
                {
                    b.Property<int>("Orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Orderid"));

                    b.Property<int?>("Customerid")
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    b.Property<int?>("Employeeid")
                        .HasColumnType("integer")
                        .HasColumnName("employeeid");

                    b.Property<DateTime?>("Orderdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("orderdate");

                    b.Property<int?>("Shipperid")
                        .HasColumnType("integer")
                        .HasColumnName("shipperid");

                    b.HasKey("Orderid")
                        .HasName("orders_pkey");

                    b.HasIndex("Customerid");

                    b.HasIndex("Employeeid");

                    b.HasIndex("Shipperid");

                    b.ToTable("orders", "sales");
                });

            modelBuilder.Entity("postgres.Orderdetail", b =>
                {
                    b.Property<int>("Orderdetailid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("orderdetailid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Orderdetailid"));

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<int?>("Productid")
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Orderdetailid")
                        .HasName("orderdetails_pkey");

                    b.HasIndex("Orderid");

                    b.HasIndex("Productid");

                    b.ToTable("orderdetails", "sales");
                });

            modelBuilder.Entity("postgres.Product", b =>
                {
                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Productid"));

                    b.Property<int?>("Categoryid")
                        .HasColumnType("integer")
                        .HasColumnName("categoryid");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Productname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("productname");

                    b.Property<int?>("Supplierid")
                        .HasColumnType("integer")
                        .HasColumnName("supplierid");

                    b.Property<string>("Unit")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("unit");

                    b.HasKey("Productid")
                        .HasName("products_pkey");

                    b.HasIndex("Categoryid");

                    b.HasIndex("Supplierid");

                    b.ToTable("products", "sales");
                });

            modelBuilder.Entity("postgres.Shipper", b =>
                {
                    b.Property<int>("Shipperid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("shipperid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Shipperid"));

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Shippername")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("shippername");

                    b.HasKey("Shipperid")
                        .HasName("shippers_pkey");

                    b.ToTable("shippers", "sales");
                });

            modelBuilder.Entity("postgres.Supplier", b =>
                {
                    b.Property<int>("Supplierid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("supplierid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Supplierid"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("city");

                    b.Property<string>("Contactname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("contactname");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("country");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Postalcode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("postalcode");

                    b.Property<string>("Suppliername")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("suppliername");

                    b.HasKey("Supplierid")
                        .HasName("suppliers_pkey");

                    b.ToTable("suppliers", "sales");
                });

            modelBuilder.Entity("postgres.Order", b =>
                {
                    b.HasOne("postgres.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("Customerid")
                        .HasConstraintName("orders_customerid_fkey");

                    b.HasOne("postgres.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("Employeeid")
                        .HasConstraintName("orders_employeeid_fkey");

                    b.HasOne("postgres.Shipper", "Shipper")
                        .WithMany("Orders")
                        .HasForeignKey("Shipperid")
                        .HasConstraintName("orders_shipperid_fkey");

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("postgres.Orderdetail", b =>
                {
                    b.HasOne("postgres.Order", "Order")
                        .WithMany("Orderdetails")
                        .HasForeignKey("Orderid")
                        .HasConstraintName("orderdetails_orderid_fkey");

                    b.HasOne("postgres.Product", "Product")
                        .WithMany("Orderdetails")
                        .HasForeignKey("Productid")
                        .HasConstraintName("orderdetails_productid_fkey");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("postgres.Product", b =>
                {
                    b.HasOne("postgres.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Categoryid")
                        .HasConstraintName("products_categoryid_fkey");

                    b.HasOne("postgres.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("Supplierid")
                        .HasConstraintName("products_supplierid_fkey");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("postgres.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("postgres.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("postgres.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("postgres.Order", b =>
                {
                    b.Navigation("Orderdetails");
                });

            modelBuilder.Entity("postgres.Product", b =>
                {
                    b.Navigation("Orderdetails");
                });

            modelBuilder.Entity("postgres.Shipper", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("postgres.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
